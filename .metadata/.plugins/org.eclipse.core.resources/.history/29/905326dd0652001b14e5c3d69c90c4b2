package ie.gmit.sw;

//imports
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import javax.imageio.ImageIO;

public class Filter extends Thread{

	private String dir; //directory
	private int filter[][]; //filter array
	private int counter = 0; //counter for images
	private int fileNumber = 0; //file number
	
	//filter used for constructor
	public Filter(String directory) {
		dir = directory;
	}
	
	
	public void run() {
		//path for the file
		File path = new File(dir);
		
		//stores images in array
		File fileList[] = path.listFiles();
		
		//get counters and file number in folder
		for(File file : fileList) {
			counter++;
			fileNumber++;
			
			try {
				BufferedImage image = ImageIO.read(new File(file.getAbsolutePath())); //get path and reads in images 
				
				for(int y = 0; y < image.getHeight(); y++) { //gets height
					for (int x =0; x < image.getWidth(); x++) { //get width
						int red=0,green=0,blue=0; //set red, green and blue to 0 for filters
						if(counter == 2) {  // image 2 
							int[][] sobel = {{-1,-2,-1},{0,0,0}, {1,2,1}}; //filter
							filter = sobel; //sobel horizontal filter
						}
						if(counter == 1) { //image 1
							int[][] sobel = {{0,-1,0},{-1,4,-1}, {0,-1,0}}; //filter 2
							filter = sobel; // sobel vertical filter
						}
						for(int row=0; row < filter.length; row++) { //length of the filter row
							for(int col =0; col <filter[row].length; col++ ) { // length of the filer column
								int RGB = image.getRGB(x, y); //image RGB geting pixel at x + y
								int R = (RGB >> 16) & 0xff;//Red Value
								int G = (RGB >> 8) & 0xff;//Green Value
								int B = (RGB) & 0xff;//Blue Value
								
								// red green and blue colour changed to filter
								red += (R*filter[row][col]);
								green += (G*filter[row][col]);
								blue += (B*filter[row][col]);
							}
						}
						
						if(red > 255) { //if red goes above 255 change it to 255
							red= 255;
						}
						else if (red < 0) { //if red goes below 0 change it to 0
							red =0;
						}
						else if (green > 255) { //if Green goes above 255 change it to 255
							green =255;
						}
						else if (green < 0) { //if green goes below 0 change it to 0
							green =0;
						}
						else if (blue > 255) { //if blue goes above 255 change it to 255
							blue =255;
						}
						else if (blue < 0) { //if blue goes below 0 change it to 0
							blue =0;
						}
						
						
						//Put the three rgb colours into one 
						int rgb = 0;
						rgb = rgb | (red << 16);
						rgb = rgb | (green << 8);
						rgb = rgb | blue;
						//int RGB = image.getRGB(x, y);
						image.setRGB(x, y, rgb);
					}
				}
				//write the image to the folder
				ImageIO.write(image, "jpg", new File(dir+ "\\" + "image" + fileNumber + ".jpg"));
						
				
				//catch for any errors
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
			
		}
	}
}
